#!/bin/bash

##
## quicklook for the internetz
##


# Spinner code from:
# http://fitnr.com/showing-a-bash-spinner.html
spinner()
{
  local pid=$1
  local delay=0.1
  local spinstr='|/-\'
  while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
    local temp=${spinstr#?}
    printf " [%c]  " "$spinstr"
    local spinstr=$temp${spinstr%"$temp"}
    sleep $delay
    printf "\b\b\b\b\b\b"
  done
  printf "    \b\b\b\b"
}

downloadfile()
{
  # optional parameter for custom temporal folder or the system temp folder
  # looks buggy
  if [ -z $tmpfolder ] ; then
    tmpfolder=`mktemp -d ${TMPDIR:-/tmp}/qli &> /dev/null`
    [ $? -ne 0 ] && tmpfolder=${TMPDIR:-/tmp}/qli # if mktemp find an existent temp folder, use an existent one
    cd $tmpfolder
  fi

  url=$input
  extension=${url##*.}
  filename=$(md5 <<< "$url")
  file=$filename.$extension

  if [ ! -f $file ] ; then
    # curl --head $url &> /dev/null
    # [ $? -ne 0 ] && echo "URL retrive error" && exit 1
    
    curl "$url" -s -o "$file" & spinner $!
    [ ! -f $file ] && echo "URL retrive nothing or error" && exit 1
  fi
}

uselocalfile()
{
  file=$input
  if [ ! -f $file ]; then
    file=$(pwd)/$file
    if [ ! -f $file ]; then
      echo "File not found!"
      exit 1
    fi
  fi
}


if [ -z $1 ] ; then
 echo 'Usage: qli <url|file> [temp_folder]'
 exit 1
fi

input=$1
tmpfolder=$2


regex='(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]'
if [[ $input =~ $regex ]]; then
  downloadfile
else
  uselocalfile
fi


qlmanage -d 0 -p "$file" &> /dev/null

exit 0